{"version":3,"file":"bc2ae5e0c7e1e35b852e598b2f8b660fda93b6da-f780224a193e74132a59.js","mappings":"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","sources":["webpack://skeleton-ts/./src/modules/BannerIcons/BannerIcons.tsx","webpack://skeleton-ts/./src/modules/Card/Card.tsx","webpack://skeleton-ts/./src/modules/CardList/CardList.tsx","webpack://skeleton-ts/./src/modules/Forms/Views/Info/Info.tsx","webpack://skeleton-ts/./src/modules/Forms/components/Submit/Submit.tsx","webpack://skeleton-ts/./src/modules/Forms/domain/Forms.ts","webpack://skeleton-ts/./src/modules/Forms/infrastructure/FormRepositoryGatsbyFunctions.ts","webpack://skeleton-ts/./src/modules/Forms/useForm.tsx","webpack://skeleton-ts/./src/modules/Forms/infrastructure/FormRepositoryFactory.ts","webpack://skeleton-ts/./src/modules/Forms/withForm.tsx","webpack://skeleton-ts/./src/modules/Hero/Hero.tsx","webpack://skeleton-ts/./src/modules/Modals/useModal.tsx","webpack://skeleton-ts/./src/modules/Modals/withModal.tsx","webpack://skeleton-ts/./src/modules/TitleMarkAndResume/TitleMarkAndResume.tsx","webpack://skeleton-ts/./src/modules/content/Agreements/Agreements.tsx","webpack://skeleton-ts/./src/modules/Accordion/elements_accordion.tsx","webpack://skeleton-ts/./src/modules/Accordion/Accordion.tsx","webpack://skeleton-ts/./src/modules/content/FAQs/FAQs.tsx","webpack://skeleton-ts/./src/modules/Forms/Views/demo/Demo.tsx","webpack://skeleton-ts/./src/modules/Forms/Views/subscribe/Subscribe.tsx","webpack://skeleton-ts/./src/modules/content/TitleResumeAndForm/TitleResumeAndForm.tsx"],"sourcesContent":["import * as React from \"react\";\n\ntype PropsBannerIcons = {\n  isRelative?: boolean;\n};\nconst BannerIcons: React.FC<PropsBannerIcons> = (props: PropsBannerIcons) => {\n  return <div className={`m-banner-icons ${props.isRelative ? \"m-banner-icons--relative\" : \"\"}`} />;\n};\n\nexport default BannerIcons;\n","import { Link, navigate } from \"gatsby\";\nimport * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport ReactHtmlParse from \"react-html-parser\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { isotype_svg } from \"../Company/logos_element\";\nimport DoNotMountComponent from \"../DoNotMountComponent/DoNotMountComponent\";\nimport { getSlugWithLang } from \"../shared/utils/getSlugWithLang\";\n\nexport type IPropsCard = PropsWithChildren<{\n  title: string | null | undefined;\n  resume_html: string | null | undefined;\n  linkTo?: string | null | undefined;\n  tagTitle?: \"h2\" | \"h3\" | \"p\" | \"h4\" | \"h5\" | \"h6\" | undefined;\n  tagCard?: \"article\" | \"div\" | \"section\" | \"aside\" | \"header\" | \"footer\" | \"nav\" | \"main\" | undefined;\n}>;\n\nconst Card: React.FC<IPropsCard> = ({ title, resume_html, tagTitle, tagCard, linkTo }: IPropsCard) => {\n  if (!title || !resume_html) return <DoNotMountComponent sms={\"No tiene title o resume\"} />;\n  const { t, i18n } = useTranslation(\"global\");\n  const title_render = React.createElement(tagTitle || \"p\", { className: \"card__title\" }, title);\n  const link = linkTo ? getSlugWithLang(`/blog/${linkTo}/`, i18n.language) : undefined;\n  function goLink() {\n    if (!linkTo) return;\n    navigate(`${link}`);\n  }\n\n  const content_render = (\n    <>\n      {isotype_svg}\n      {link ? <Link to={`${link}`}>{title_render}</Link> : title_render}\n      <div className={\"card__resume\"}>{ReactHtmlParse(resume_html)}</div>\n      {link && (\n        <Link to={`${link}`} className={\"card__read-more\"}>\n          {t(\"readme\")} {\">\"}\n        </Link>\n      )}\n    </>\n  );\n\n  const card_render = React.createElement(\n    tagCard || \"div\",\n    { className: `m-card ${link ? \"m-card--clickable\" : \"\"}`, onClick: goLink },\n    content_render\n  );\n  return card_render;\n};\n\nexport default Card;\n","import * as React from \"react\";\n\nimport Card, { IPropsCard } from \"../Card/Card\";\nimport DoNotMountComponent from \"../DoNotMountComponent/DoNotMountComponent\";\n\ntype PropsCardList = {\n  cardList: IPropsCard[] | null | undefined;\n  twoColumns?: boolean;\n  tagTitles?: \"h2\" | \"h3\" | \"p\" | \"h4\" | \"h5\" | \"h6\" | undefined;\n  tagCards?: \"article\" | \"div\" | \"section\" | \"aside\" | \"header\" | \"footer\" | \"nav\" | \"main\" | undefined;\n};\n\nconst CardList: React.FC<PropsCardList> = ({ cardList, tagTitles, tagCards, twoColumns }: PropsCardList) => {\n  if (!cardList || !Array.isArray(cardList)) return <DoNotMountComponent sms={\"faltan cards\"} />;\n  return (\n    <div className={`m-card-list ${cardList.length % 2 === 0 || twoColumns ? \"card-list--x2\" : \"\"}`}>\n      {cardList.map((card, index: number) => (\n        <Card\n          key={index}\n          title={card.title}\n          tagTitle={tagTitles}\n          linkTo={card.linkTo}\n          tagCard={tagCards}\n          resume_html={card.resume_html}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Submit, { SubmitType } from \"../../components/Submit/Submit\";\nimport { StateForm } from \"../../useForm\";\n\nexport type PropsForm = PropsWithChildren<{\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void;\n  stateForm: StateForm;\n  fromLanding: string;\n  infoRequest: string;\n}>;\n\nexport const Info: React.FC<PropsForm> = (props: PropsForm) => {\n  const { t } = useTranslation(\"global\");\n  const infoSubmit: SubmitType = {\n    textButtonSubmit: `${t(\"form.Send\")}`,\n    textButtonSubmitting: `${t(\"form.Sending\")}`,\n    stateForm: props.stateForm,\n    textInfo: props.infoRequest,\n  };\n  return (\n    <form\n      name=\"contact\"\n      method=\"post\"\n      data-netlify=\"true\"\n      onSubmit={(event) => {\n        props.handleSubmit(event);\n      }}\n      className={\"\"}\n    >\n      <input type=\"hidden\" name=\"form-name\" value=\"Contacto\" />\n      <div className={\"form__columns\"}>\n        <div>\n          <label hidden>{t(\"form.PlaceholderName\")}</label>\n          <input\n            className={\"a-input a-input--required\"}\n            type=\"text\"\n            name=\"name\"\n            placeholder={`${t(\"form.PlaceholderNameSubname\")}`}\n            required\n          />\n          <span>*</span>\n        </div>\n        <div>\n          <label hidden>{t(\"form.PlaceholderEmail\")} </label>\n          <input\n            className={\"a-input a-input--required\"}\n            type=\"email\"\n            name=\"email\"\n            placeholder={`${t(\"form.PlaceholderEmail\")}`}\n            required\n          />\n          <span>*</span>\n        </div>\n        <div>\n          <label hidden>{`${t(\"form.PlaceholderPhone\")}`} </label>\n          <input\n            className={\"a-input a-input--required\"}\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={`${t(\"form.PlaceholderPhone\")}`}\n            required\n          />\n          <span>*</span>\n        </div>\n        <label hidden> {t(\"form.PlaceholderOrg\")} </label>\n        <input className={\"a-input\"} type=\"text\" name=\"company\" placeholder={`${t(\"form.PlaceholderOrg\")}`} />\n      </div>\n      <div className={\"m-info-form__one-line a-input--required\"}>\n        <label hidden>{t(\"form.TextMessage\")} </label>\n        <input\n          className={\"a-input\"}\n          type=\"text\"\n          name=\"message\"\n          placeholder={`${t(\"form.PlaceholderMessage\")}`}\n          required\n        />\n        <span>*</span>\n      </div>\n\n      <div className={\"m-info-form__check-submit\"}>\n        <div className={\"m-info-form__private\"}>\n          <label htmlFor={`politica--${props.fromLanding}`} className={\"a-policy\"}>\n            {t(\"form.politic\")}{\" \"}\n            <a\n              href=\"/legal/politica-de-privacidad/\"\n              className={\"a-link\"}\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n            >\n              {t(\"form.politicLink\")}\n            </a>{\" \"}\n          </label>\n          <input\n            type=\"checkbox\"\n            name={`politica--${props.fromLanding}`}\n            id={`politica--${props.fromLanding}`}\n            value=\"acepta-politica\"\n            required\n          />\n        </div>\n        <div className=\"center\">\n          <Submit submit={infoSubmit} />\n        </div>\n      </div>\n    </form>\n  );\n};\n","import * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\n//import { close_svg } from \"../../../Modals/elements_modal\";\nimport { StateForm } from \"../../useForm\";\nimport { check_svg } from \"../elements_form\";\n\nexport type SubmitType = {\n  stateForm: StateForm;\n  textButtonSubmit: string;\n  textButtonSubmitting: string;\n  textInfo?: string;\n};\n\ntype PropsSubmit = PropsWithChildren<{ submit: SubmitType }>;\n\nconst Submit: React.FC<PropsSubmit> = (props: PropsSubmit) => {\n  const { t } = useTranslation(\"global\");\n  return (\n    <div className={\"m-submit\"}>\n      <button\n        type=\"submit\"\n        disabled={props.submit.stateForm > 0}\n        className={`a-button \n        ${props.submit.stateForm === StateForm.SUCCESS ? \"a-button--success\" : \"\"}\n        ${props.submit.stateForm === StateForm.SUBMITTING ? \"a-button--submitting\" : \"\"}\n        ${props.submit.stateForm === StateForm.FAIL ? \"a-button--fail\" : \"\"}\n        `}\n      >\n        {props.submit.stateForm === StateForm.REST && <> {props.submit.textButtonSubmit}</>}\n        {props.submit.stateForm === StateForm.SUBMITTING && <> {props.submit.textButtonSubmitting} </>}\n        {props.submit.stateForm === StateForm.SUCCESS && (\n          <>\n            {\" \"}\n            {t(\"Submit.Completed\")} {check_svg}{\" \"}\n          </>\n        )}\n        {props.submit.stateForm === StateForm.FAIL && <> {t(\"Submit.Error\")} </>}\n      </button>\n      {props.submit.stateForm === StateForm.FAIL && (\n        <p className={\"m-submit__sms m-submit__sms--fail\"}>\n          <Trans t={t} components={{ b: <b /> }}>\n            {t(\"Submit.ErrorMessage\")} {props.submit.textInfo}\n          </Trans>\n        </p>\n      )}\n      {props.submit.stateForm === StateForm.SUCCESS && (\n        <p className={\"m-submit__sms m-submit__sms--success\"}>\n          <Trans t={t} components={{ b: <b /> }}>\n            {t(\"Submit.CompletedMessage\")} {props.submit.textInfo}\n          </Trans>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Submit;\n","export const enum TypeForm {\n  INFO,\n}\n","import { FormRepository } from \"../domain/FormRepository\";\n\nexport class FormRepositoryGatsbyFunctions implements FormRepository {\n  async send(formData: FormData): Promise<Response> {\n    const body: { [key: string]: string | Blob } = {};\n    for (const [key, value] of formData.entries()) {\n      if (typeof value === \"string\") {\n        body[key] = value;\n      }\n    }\n    return fetch(`/api/send-form`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    });\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { TypeForm } from \"./domain/Forms\";\nimport { FormRepositoryFactory } from \"./infrastructure/FormRepositoryFactory\";\n\nexport const enum StateForm {\n  REST,\n  SUBMITTING,\n  SUCCESS,\n  FAIL,\n}\n\nexport interface PropsUseForm {\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void;\n  stateForm: StateForm;\n  infoRequest: string;\n}\n\nexport const useForm = (typeForm: TypeForm): PropsUseForm => {\n  const [stateForm, setStateForm] = useState<StateForm>(StateForm.REST);\n  const [infoRequest, setInfoRequest] = useState<string>(\"\");\n\n  const formRepository = FormRepositoryFactory(typeForm);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setStateForm(StateForm.SUBMITTING);\n    const data: FormData = new FormData(e.target as HTMLFormElement);\n    formRepository\n      .send(data)\n      .then((response) => {\n        if (response.ok) {\n          setStateForm(StateForm.SUCCESS);\n        } else {\n          setStateForm(StateForm.FAIL);\n        }\n        setInfoRequest(response.statusText);\n      })\n      .catch((e) => {\n        setStateForm(StateForm.FAIL);\n        setInfoRequest(e.toString);\n      });\n  };\n  return {\n    handleSubmit,\n    stateForm,\n    infoRequest,\n  };\n};\n","import { FormRepository } from \"../domain/FormRepository\";\nimport { TypeForm } from \"../domain/Forms\";\nimport { FormRepositoryGatsbyFunctions } from \"./FormRepositoryGatsbyFunctions\";\n\nexport const FormRepositoryFactory = (typeForm: TypeForm): FormRepository => {\n  switch (typeForm) {\n    case TypeForm.INFO:\n      return new FormRepositoryGatsbyFunctions();\n  }\n};\n","import * as React from \"react\";\n\nimport { PropsForm } from \"./components/Info/InfoForm\";\nimport { TypeForm } from \"./domain/Forms\";\nimport { useForm } from \"./useForm\";\n\nfunction withForm(Form: React.FC<PropsForm>, typeForm: TypeForm, fromLanding = \"\"): React.ComponentClass {\n  const { handleSubmit, stateForm, infoRequest } = useForm(typeForm);\n  return class x extends React.Component {\n    render() {\n      return <Form {...{ handleSubmit, stateForm, infoRequest, fromLanding }} />;\n    }\n  };\n}\n\nexport default withForm;\n","import { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport BannerIcons from \"../BannerIcons/BannerIcons\";\nimport { logoCircle_svg } from \"../Company/logos_element\";\nimport { TypeForm } from \"../Forms/domain/Forms\";\nimport { Info } from \"../Forms/Views/Info/Info\";\nimport withForm from \"../Forms/withForm\";\nimport { useModal } from \"../Modals/useModal\";\nimport { withModal } from \"../Modals/withModal\";\nimport { getSlugWithLang } from \"../shared/utils/getSlugWithLang\";\n\nexport const enum CtaDemo {\n  POPUP = \"popup\",\n  GO_TO_DEMO = \"go-to-demo\",\n}\n\nexport type PropsHero = PropsWithChildren<{\n  subtitle?: string | null | undefined;\n  ctaDemo?: CtaDemo;\n  modifier?: string | null | undefined;\n  backgroundImage: any;\n}>;\n\n// export type PropsHeroParent = PropsWithChildren<{\n//   subtitle: string;\n//   ctaDemo: boolean;\n// }>;\n\nconst Hero: React.FC<PropsHero> = (props: PropsHero) => {\n  const InfoFormWithForm = withForm(Info, TypeForm.INFO, \"form-in-popup-hero\");\n  const { t, i18n } = useTranslation(\"global\");\n  const [has_modal, toggleModal] = useModal();\n  const FormWithModal = withModal(InfoFormWithForm, {}, { has_modal, toggleModal });\n\n  const renderCtaButton = () => {\n    if (props.ctaDemo === CtaDemo.GO_TO_DEMO) {\n      return (\n        <Link className={\"a-button a-button--without-border a-button--blue-light\"} to={`${getSlugWithLang(\"demo\", i18n.language)}`}>\n          {t(\"Button\")}\n        </Link>\n      );\n    }\n\n    if (props.ctaDemo === CtaDemo.POPUP) {\n      return (\n        <button className={\"a-button a-button--without-border a-button--blue-light\"} onClick={toggleModal}>\n          {t(\"ButtonDemo\")}\n        </button>\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <FormWithModal />\n      <section className={`o-hero`}>\n        <GatsbyImage\n          className={\"hero__background\"}\n          alt={`${t(\"Image\")}`}\n          image={props.backgroundImage}\n          objectFit={\"cover\"}\n          objectPosition={\"center\"}\n          style={{ position: \"absolute\" }}\n        />\n        <div className={`c-hero`}>\n          <div className={\"hero__title-n-text\"}>\n            {props.children}\n            {props.subtitle && (\n              <div className={\"hero__text-n-cta\"}>\n                <p className={\"hero__subtitle\"}> {props.subtitle}</p>\n                {props.ctaDemo && renderCtaButton()}\n              </div>\n            )}\n            {!props.subtitle && props.ctaDemo && <div className={\"hero__text-n-cta\"}>{renderCtaButton()}</div>}\n          </div>\n          {logoCircle_svg}\n        </div>\n        <BannerIcons />\n      </section>\n    </>\n  );\n};\n\nexport { Hero };\n","import { useState } from \"react\";\n\nexport const useModal = (): [boolean, () => void] => {\n  const [is_modal, set_modal] = useState(false);\n\n  const toggleModal = () => {\n    if (is_modal) {\n      set_modal(false);\n    } else {\n      set_modal(true);\n    }\n  };\n\n  return [is_modal, toggleModal];\n};\n","import * as React from \"react\";\n\nimport { close_svg } from \"./elements_modal\";\n\nexport function withModal(\n  Component: React.FC | React.ComponentClass,\n  props: object,\n  control: { has_modal: boolean; toggleModal: () => void }\n): React.ComponentClass {\n  return class x extends React.Component {\n    render() {\n      return (\n        <div className={`o-modal ${control.has_modal ? \"\" : \"o-modal--hidden\"}`}>\n          <div className={\"m-modal__container\"}>\n            <div className={\"m-modal__header\"}>\n              <button className={\"modal__close\"} onClick={control.toggleModal}>\n                {close_svg}{\" \"}\n              </button>\n            </div>\n            <div className={\"m-modal__component\"}>\n              <Component {...props} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n}\n","import * as React from \"react\";\nimport ReactHtmlParse from \"react-html-parser\";\n\nimport { IData } from \"../../types/IData\";\nimport { IPropsCard } from \"../Card/Card\";\n\nimport CardList from \"../CardList/CardList\";\nimport DoNotMountComponent from \"../DoNotMountComponent/DoNotMountComponent\";\n\nexport type PropsCardList = {\n  list?: IPropsCard[] | null | undefined;\n  tagTitles?: \"h2\" | \"h3\" | \"p\" | \"h4\" | \"h5\" | \"h6\" | undefined;\n};\n\ntype PropsTitleMarkAndResume = {\n  titleMarkAndResume: IData;\n  cardList?: PropsCardList | null | undefined;\n  nameSection: string | null | undefined;\n};\n\nconst TitleMarkAndResume: React.FC<PropsTitleMarkAndResume> = ({\n  titleMarkAndResume,\n  cardList,\n  nameSection,\n}: PropsTitleMarkAndResume) => {\n  if (!titleMarkAndResume.mark_html || !titleMarkAndResume.resume_html)\n    return <DoNotMountComponent sms={\"No tiene mark o resume\"} />;\n\n  const title_render = React.createElement(\n    titleMarkAndResume?.tagTitle || \"p\",\n    { className: \"a-title-section\" },\n    titleMarkAndResume.title\n  );\n  return (\n    <section className={`s-${nameSection} o-title-mark-resume`}>\n      <div className={`c-title-mark-resume`}>\n        {titleMarkAndResume.title && title_render}\n        <div className={\"title-mark-resume__columns\"}>\n          <div className={\"title-mark-resume__mark\"}>{ReactHtmlParse(titleMarkAndResume.mark_html)}</div>\n          <div className={\"title-mark-resume__text\"}>{ReactHtmlParse(titleMarkAndResume.resume_html)}</div>\n        </div>\n        {cardList && <CardList cardList={cardList.list} tagTitles={cardList.tagTitles} />}\n      </div>\n    </section>\n  );\n};\n\nexport default TitleMarkAndResume;\n","import { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nexport type IAgreements = {\n  tagTitle?: \"h2\" | \"h3\" | \"p\" | null | undefined;\n};\n\ntype PropsAgreements = PropsWithChildren<{\n  agreements: IAgreements;\n}>;\nconst Agreements: React.FC<PropsAgreements> = ({ agreements }) => {\n  const { t } = useTranslation(\"global\");\n  const { tagTitle } = agreements;\n  const title_render = React.createElement(tagTitle || \"p\", { className: \"a-title-section\" }, t(\"Agreements.title\"));\n\n  return (\n    <section className={`o-agreements`}>\n      <div className={`c-agreements`}>\n        <div className={\"agreements__headline\"}>{title_render}</div>\n        <div className=\"agreements__columns\">\n          <div>\n            <Trans t={t} components={{ b: <b />, p: <p />, strong: <strong /> }}>\n              {t(\"Agreements.text\")}\n            </Trans>\n          </div>\n          <div className=\"agreements__grid\">\n            <StaticImage className=\"agreements__logo\" src={\"./assets/gob-ara.png\"} alt={\"Acuerdos\"} />\n            <StaticImage className=\"agreements__logo\" src={\"./assets/Barbastro.png\"} alt={\"Acuerdos\"} />\n            <StaticImage className=\"agreements__logo\" src={\"./assets/zara-ayun.png\"} alt={\"Acuerdos\"} />\n            <StaticImage className=\"agreements__logo\" src={\"./assets/somontano.png\"} alt={\"Acuerdos\"} />\n            <StaticImage className=\"agreements__logo\" src={\"./assets/dip-hues.png\"} alt={\"Acuerdos\"} />\n            <StaticImage className=\"agreements__logo\" src={\"./assets/monzon.png\"} alt={\"Acuerdos\"} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Agreements;\n","import * as React from \"react\";\n// Remember that all const are suffix _svg\n\nconst blade_svg = (\n  <svg tabIndex={0} className=\"m-accordion__blade\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26.238\" height=\"26.238\">\n    <g id=\"Grupo_287\" transform=\"\">\n      <line className=\"a-accordion__blade\" x1=\"17.079\" y2=\"17.199\" fill=\"none\" stroke=\"#ce4907\" strokeWidth=\"2\" />\n      <line\n        className=\"a-accordion__blade a-accordion__blade--vertical\"\n        x2=\"17.079\"\n        y2=\"17.079\"\n        fill=\"none\"\n        stroke=\"#ce4907\"\n        strokeWidth=\"2\"\n      />\n    </g>\n  </svg>\n);\n\nexport { blade_svg };\n","import * as React from \"react\";\nimport { PropsWithChildren, useRef, useState } from \"react\";\n\nimport { blade_svg } from \"./elements_accordion\";\n\ninterface PropsAccordion extends PropsWithChildren {\n  resume: string;\n}\n\nconst Accordion: React.FC<PropsAccordion> = (props: PropsAccordion) => {\n  const [is_open, setOpen] = useState<boolean>(false);\n  const blockText = useRef() as React.MutableRefObject<HTMLDivElement>;\n  const keyDownKeyBoard = (e) => {\n    if (e.key === \"Enter\") {\n      setOpen(!is_open);\n    }\n  };\n\n  const handleChildClick = (e) => {\n    e.stopPropagation(); // detener la propagación del evento\n  };\n  return (\n    <div\n      className={`m-accordion ${is_open ? \"m-accordion--open\" : \"\"} `}\n      onKeyDownCapture={(e) => keyDownKeyBoard(e)}\n      onClick={() => {\n        setOpen(!is_open);\n      }}\n    >\n      <p className=\"m-accordion__resume\">{props.resume}</p>\n      {blade_svg}\n      <div\n        ref={blockText}\n        className={`m-accordion__long ${is_open ? \"m-accordion__long--open\" : \"m-accordion__long--close\"}`}\n        onClick={handleChildClick}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import * as React from \"react\";\n\nimport Accordion from \"../../Accordion/Accordion\";\nimport DoNotMountComponent from \"../../DoNotMountComponent/DoNotMountComponent\";\nimport { Faq } from \"./IFaqs\";\n\ntype PropsFaqs = {\n  title: string | null | undefined;\n  tagTitle?: \"h2\" | \"h3\" | \"p\" | null | undefined;\n  faqsLists: Faq[] | null | undefined;\n};\nconst FAQs: React.FC<PropsFaqs> = ({ faqsLists, title, tagTitle }: PropsFaqs) => {\n  if (!title || !faqsLists || faqsLists.length === 0) {\n    return <DoNotMountComponent sms={\"No existen faqs\"} />;\n  }\n  const title_render = React.createElement(tagTitle || \"h2\", { className: \"a-title-section\" }, title);\n\n  return (\n    <section className={`o-faqs`}>\n      <div className={`c-faqs`}>\n        <div className={\"a-title-section\"}>{title_render}</div>\n        {faqsLists.map((faq, index: number) => (\n          <Accordion key={index} resume={faq.question}>\n            <p>{faq.answer}</p>\n          </Accordion>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default FAQs;\n","import * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Submit, { SubmitType } from \"../../components/Submit/Submit\";\nimport { StateForm } from \"../../useForm\";\n\nexport type PropsForm = PropsWithChildren<{\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void;\n  stateForm: StateForm;\n  fromLanding: string;\n  infoRequest: string;\n}>;\n\nexport const Demo: React.FC<PropsForm> = (props: PropsForm) => {\n  const { t } = useTranslation(\"global\");\n  const infoSubmit: SubmitType = {\n    textButtonSubmit: `${t(\"form.Send\")}`,\n    textButtonSubmitting: `${t(\"form.Sending\")}`,\n    stateForm: props.stateForm,\n    textInfo: props.infoRequest,\n  };\n\n  return (\n    <form\n      name=\"solicita-informacion\"\n      method=\"post\"\n      data-netlify=\"true\"\n      onSubmit={(event) => {\n        props.handleSubmit(event);\n      }}\n      className={\"\"}\n    >\n      <div className={\"form-demo__inputs\"}>\n        <div>\n          <label hidden> {t(\"form.PlaceholderName\")} </label>\n          <input className={\"a-input\"} type=\"text\" name=\"name\" placeholder={`${t(\"form.PlaceholderName\")}`} required />\n        </div>\n        <div>\n          <label hidden>{t(\"form.PlaceholderEmail\")} </label>\n          <input\n            className={\"a-input\"}\n            type=\"email\"\n            name=\"email\"\n            placeholder={`${t(\"form.PlaceholderEmail\")}`}\n            required\n          />\n        </div>\n      </div>\n      <div className={\"form-demo__actions\"}>\n        <div className={\"m-info-form__check-submit\"}>\n          <div className={\"m-info-form__private\"}>\n            <label htmlFor={`politica--${props.fromLanding}`} className={\"a-policy\"}>\n              {t(\"form.politic\")}{\" \"}\n              <a\n                href=\"/legal/politica-de-privacidad/\"\n                target=\"_blank\"\n                className={\"a-link\"}\n                rel=\"nofollow noopener noreferrer\"\n              >\n                {t(\"form.politicLink\")}\n              </a>{\" \"}\n            </label>\n            <input\n              type=\"checkbox\"\n              name={`politica--${props.fromLanding}`}\n              id={`politica--${props.fromLanding}`}\n              value=\"acepta-politica\"\n              required\n            />\n          </div>\n          <div className=\"center\">\n            <Submit submit={infoSubmit} />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import * as React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Submit, { SubmitType } from \"../../components/Submit/Submit\";\nimport { StateForm } from \"../../useForm\";\n\nexport type PropsForm = PropsWithChildren<{\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void;\n  stateForm: StateForm;\n  fromLanding: string;\n  infoRequest: string;\n}>;\n\nexport const Subscribe: React.FC<PropsForm> = (props: PropsForm) => {\n  const { t } = useTranslation(\"global\");\n  const infoSubmit: SubmitType = {\n    textButtonSubmit: `${t(\"form.Send\")}`,\n    textButtonSubmitting: `${t(\"form.Sending\")}`,\n    stateForm: props.stateForm,\n    textInfo: props.infoRequest,\n  };\n  return (\n    <form\n      name=\"subscribe\"\n      method=\"post\"\n      data-netlify=\"true\"\n      onSubmit={(event) => {\n        props.handleSubmit(event);\n      }}\n      className={\"\"}\n    >\n      <input type=\"hidden\" name=\"form-name\" value=\"Subscripción\" />\n      <div className={\"form-demo__inputs\"}>\n        <div>\n          <label hidden> {t(\"form.PlaceholderName\")} </label>\n          <input className={\"a-input\"} type=\"text\" name=\"name\" placeholder={`${t(\"form.PlaceholderName\")}`} required />\n        </div>\n        <div>\n          <label hidden>{t(\"form.PlaceholderEmail\")}</label>\n          <input\n            className={\"a-input\"}\n            type=\"email\"\n            name=\"email\"\n            placeholder={`${t(\"form.PlaceholderEmail\")}`}\n            required\n          />\n        </div>\n      </div>\n      <div className={\"form-demo__actions\"}>\n        <div className={\"m-info-form__check-submit\"}>\n          <div className={\"m-info-form__private\"}>\n            <label htmlFor={`politica--${props.fromLanding}`} className={\"a-policy\"}>\n              {t(\"form.politic\")}{\" \"}\n              <a\n                href=\"/legal/politica-de-privacidad/\"\n                className={\"a-link\"}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                {t(\"form.politicLink\")}\n              </a>{\" \"}\n            </label>\n            <input\n              type=\"checkbox\"\n              name={`politica--${props.fromLanding}`}\n              id={`politica--${props.fromLanding}`}\n              value=\"acepta-politica\"\n              required\n            />\n          </div>\n          <div className=\"center\">\n            <Submit submit={infoSubmit} />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import * as React from \"react\";\nimport ReactHtmlParse from \"react-html-parser\";\n\nimport { IData } from \"../../../types/IData\";\nimport DoNotMountComponent from \"../../DoNotMountComponent/DoNotMountComponent\";\nimport { TypeForm } from \"../../Forms/domain/Forms\";\nimport { Demo } from \"../../Forms/Views/demo/Demo\";\nimport { Info } from \"../../Forms/Views/Info/Info\";\nimport { Subscribe } from \"../../Forms/Views/subscribe/Subscribe\";\nimport withForm from \"../../Forms/withForm\";\n\nexport const enum RenderForm {\n  DEMO = \"demo\",\n  INFO = \"info\",\n  SUBSCRIBE = \"subscribe\",\n}\n\ntype PropsTitleResumeAndForm = {\n  data: IData;\n  nameSection: string;\n  renderForm?: RenderForm;\n};\n\nconst TitleResumeAndForm: React.FC<PropsTitleResumeAndForm> = ({\n  nameSection,\n  data,\n  renderForm,\n}: PropsTitleResumeAndForm) => {\n  if (!renderForm) return <DoNotMountComponent sms={\"Falta form\"} />;\n\n  let form;\n\n  switch (renderForm) {\n    case RenderForm.SUBSCRIBE:\n      form = Subscribe;\n      break;\n    case RenderForm.INFO:\n      form = Info;\n      break;\n    case RenderForm.DEMO:\n      form = Demo;\n      break;\n    default:\n      form = Info;\n      break;\n  }\n\n  const FormUse = withForm(form, TypeForm.INFO, nameSection);\n  const title_render = React.createElement(data.tagTitle || \"p\", { className: \"a-title-section\" }, data.title);\n  return (\n    <section className={`s-${nameSection} o-title-resume-form`}>\n      <div className={`c-title-resume-form`}>\n        <div className={\"a-title-section\"}>{title_render} </div>\n        {data.resume_html && <div className={\"title-resume-form__text\"}>{ReactHtmlParse(data.resume_html)}</div>}\n        <div className=\"title-resume-form__form\">\n          <FormUse />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TitleResumeAndForm;\n"],"names":["props","React","className","isRelative","_ref","title","resume_html","tagTitle","tagCard","linkTo","DoNotMountComponent","sms","t","i18n","useTranslation","title_render","link","getSlugWithLang","language","undefined","content_render","isotype_svg","Link","to","ReactHtmlParse","onClick","navigate","cardList","tagTitles","tagCards","twoColumns","Array","isArray","length","map","card","index","Card","key","Info","infoSubmit","textButtonSubmit","textButtonSubmitting","stateForm","textInfo","infoRequest","name","method","onSubmit","event","handleSubmit","type","value","hidden","placeholder","required","htmlFor","fromLanding","href","target","rel","id","Submit","submit","disabled","StateForm","check_svg","Trans","components","b","TypeForm","FormRepositoryGatsbyFunctions","prototype","send","async","formData","body","entries","fetch","headers","JSON","stringify","useForm","typeForm","setStateForm","useState","REST","setInfoRequest","formRepository","FormRepositoryFactory","e","preventDefault","SUBMITTING","data","FormData","then","response","ok","SUCCESS","FAIL","statusText","catch","toString","Form","_React$Component","x","apply","arguments","_inheritsLoose","render","CtaDemo","Hero","InfoFormWithForm","withForm","has_modal","toggleModal","useModal","is_modal","set_modal","FormWithModal","Component","control","close_svg","withModal","renderCtaButton","ctaDemo","GO_TO_DEMO","POPUP","GatsbyImage","alt","image","backgroundImage","objectFit","objectPosition","style","position","children","subtitle","logoCircle_svg","BannerIcons","titleMarkAndResume","nameSection","mark_html","CardList","list","agreements","p","strong","StaticImage","src","__imageData","require","blade_svg","tabIndex","xmlns","width","height","transform","x1","y2","fill","stroke","strokeWidth","x2","is_open","setOpen","blockText","useRef","onKeyDownCapture","keyDownKeyBoard","resume","ref","stopPropagation","faqsLists","faq","Accordion","question","answer","Demo","Subscribe","RenderForm","form","renderForm","SUBSCRIBE","INFO","DEMO","FormUse"],"sourceRoot":""}