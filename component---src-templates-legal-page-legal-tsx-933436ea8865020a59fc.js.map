{"version":3,"file":"component---src-templates-legal-page-legal-tsx-933436ea8865020a59fc.js","mappings":"8MAQA,MAaaA,EAAOC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,KAAEC,EAAI,YAAEC,GAA6Cd,EAAA,OACxEe,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAA0B,QAArBhB,EAAEY,EAAKK,sBAAc,IAAAjB,GAAa,QAAbC,EAAnBD,EAAqBkB,mBAAW,IAAAjB,OAAb,EAAnBA,EAAkCe,MACzCG,YAAgC,QAArBjB,EAAEU,EAAKK,sBAAc,IAAAf,GAAa,QAAbC,EAAnBD,EAAqBgB,mBAAW,IAAAf,OAAb,EAAnBA,EAAkCgB,YAC/CC,OAAO,mBACPC,KAAI,UAA8B,QAA9BjB,EAAWQ,EAAKK,sBAAc,IAAAb,GAAa,QAAbC,EAAnBD,EAAqBc,mBAAW,IAAAb,OAAb,EAAnBA,EAAkCgB,MACjDC,UAAS,UAA8B,QAA9BhB,EAAWM,EAAKK,sBAAc,IAAAX,GAAa,QAAbC,EAAnBD,EAAqBY,mBAAW,IAAAX,OAAb,EAAnBA,EAAkCc,MACtDE,qBAAyC,QAArBf,EAAEI,EAAKK,sBAAc,IAAAT,GAAa,QAAbC,EAAnBD,EAAqBU,mBAAW,IAAAT,OAAb,EAAnBA,EAAkCc,qBACxDC,cACoB,QAAlBd,EAAAE,EAAKa,qBAAa,IAAAf,GAAO,QAAPC,EAAlBD,EAAoBgB,aAAK,IAAAf,OAAP,EAAlBA,EAA2BgB,KAAKC,IAAI,IAAAC,EAAAC,EAAA,MAAM,CACxCC,SAAUH,EAAKI,kBACfX,KAAM,WAAoB,QAAtBQ,EAAYD,EAAKK,GAAG,UAAE,IAAAJ,GAAa,QAAbC,EAAVD,EAAYX,mBAAW,IAAAY,OAAb,EAAVA,EAAyBT,MAC1C,MAAM,GAETa,KAAMrB,EAAYqB,MAClB,EAGJ,UA/BkBC,IAA2D,IAAAC,EAAAC,EAAAC,EAAA,IAA1D,KAAE1B,EAAI,YAAEC,GAA6CsB,EACtE,OACErB,EAAAA,cAACyB,EAAAA,EAAM,CACLL,KAAMrB,EAAYqB,KAClBM,YAAY,OACZC,YAA0B,QAAdL,EAAAxB,EAAK8B,iBAAS,IAAAN,GAAO,QAAPC,EAAdD,EAAgBV,aAAK,IAAAW,OAAP,EAAdA,EAAuBV,KAAKC,IAAI,IAAAe,EAAA,OAA6B,QAA7BA,EAAKf,EAAKgB,2BAAmB,IAAAD,OAAA,EAAxBA,EAA0BzB,WAAW,MAAK,GAC3F2B,iBAAeC,EAAAA,EAAAA,GAAMlC,EAAKmC,YAAYrB,MAAMC,KAAKC,GAASA,EAAKoB,UAE/DlC,EAAAA,cAAA,OAAKmC,UAAU,SAAQC,EAAAA,EAAAA,IAAe,IAAsB,QAAvBZ,EAAI1B,EAAKK,sBAAc,IAAAqB,OAAA,EAAnBA,EAAqBa,gBACvD,C","sources":["webpack://skeleton-ts/./src/templates/legal/pageLegal.tsx"],"sourcesContent":["import { graphql, PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport ReactHtmlParse from \"react-html-parser\";\n\nimport Layout from \"../../modules/Layout/Layout\";\nimport { SEO } from \"../../modules/SEO/SEO\";\nimport {IPageProps} from \"../../types/IData\";\n\nconst LegalPage = ({ data, pageContext }: IPageProps<Queries.legalQuery>) => {\n  return (\n    <Layout\n      lang={pageContext.lang}\n      landingName=\"home\"\n      legalLinks={data.allLegals?.nodes?.map((item) => item.childMarkdownRemark?.frontmatter) || []}\n      navbarLinksList={[...data.navbarLinks.nodes.map((item) => item.metas)]}\n    >\n      <div className=\"docs\">{ReactHtmlParse(`${data.markdownRemark?.content_html}`)}</div>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data, pageContext }: IPageProps<Queries.legalQuery>) => (\n  <SEO\n    title={data.markdownRemark?.frontmatter?.title}\n    description={data.markdownRemark?.frontmatter?.description}\n    robots=\"noindex nofollow\"\n    slug={`legal/${data.markdownRemark?.frontmatter?.slug}`}\n    canonical={`legal/${data.markdownRemark?.frontmatter?.slug}`}\n    isNotOriginalContent={data.markdownRemark?.frontmatter?.isNotOriginalContent}\n    hrefLangList={\n      data.hrefLangsList?.nodes?.map((item) => ({\n        hrefLang: item.relativeDirectory,\n        slug: `/legal/${item.md[0]?.frontmatter?.slug}`,\n      })) || []\n    }\n    lang={pageContext.lang}\n  />\n);\n\nexport default LegalPage;\n\nexport const query = graphql`\n  query legal($id: String, $reference: String, $lang: String = \"es_es\") {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        slug\n        title\n        description\n        isNotOriginalContent\n      }\n      content_html: html\n      id\n    }\n    navbarLinks: allPage(filter: { lang: { eq: $lang } }, sort: { settings: { order: ASC } }) {\n      nodes {\n        metas {\n          name\n          slug\n        }\n      }\n    }\n    allLegals: allFile(\n      filter: { sourceInstanceName: { eq: \"legal\" }, relativeDirectory: { eq: $lang } }\n      sort: { childMarkdownRemark: { frontmatter: { order: ASC } } }\n    ) {\n      nodes {\n        childMarkdownRemark {\n          frontmatter {\n            slug\n            name: title\n          }\n          id\n        }\n        relativeDirectory\n      }\n    }\n    hrefLangsList: allFile(\n      filter: { childrenMarkdownRemark: { elemMatch: { frontmatter: { id: { eq: $reference } } } } }\n    ) {\n      nodes {\n        md: childrenMarkdownRemark {\n          frontmatter {\n            slug\n          }\n        }\n        relativeDirectory\n      }\n    }\n  }\n`;\n"],"names":["Head","_ref2","_data$markdownRemark2","_data$markdownRemark3","_data$markdownRemark4","_data$markdownRemark5","_data$markdownRemark6","_data$markdownRemark7","_data$markdownRemark8","_data$markdownRemark9","_data$markdownRemark10","_data$markdownRemark11","_data$hrefLangsList","_data$hrefLangsList$n","data","pageContext","React","SEO","title","markdownRemark","frontmatter","description","robots","slug","canonical","isNotOriginalContent","hrefLangList","hrefLangsList","nodes","map","item","_item$md$","_item$md$$frontmatter","hrefLang","relativeDirectory","md","lang","_ref","_data$allLegals","_data$allLegals$nodes","_data$markdownRemark","Layout","landingName","legalLinks","allLegals","_item$childMarkdownRe","childMarkdownRemark","navbarLinksList","_toConsumableArray","navbarLinks","metas","className","ReactHtmlParse","content_html"],"sourceRoot":""}